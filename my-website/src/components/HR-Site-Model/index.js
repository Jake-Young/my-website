/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { PerspectiveCamera, useGLTF } from "@react-three/drei";
import React, { useRef } from "react";

import { Canvas } from "@react-three/fiber";
import modelPath from "./HRSite.glb";

const HRSiteModel = (props) => {
  const group = useRef();
  const { nodes, materials } = useGLTF(modelPath);
  return (
    <group ref={group} {...props} dispose={null}>
      <group
        position={[5.1, 0, -2.11]}
        rotation={[-Math.PI / 2, 0, -2.44]}
        scale={[4.15, 4.15, 4.15]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_0.geometry}
          material={materials.Ladder}
        />
      </group>
      <group
        position={[-4.79, 1.85, 9.31]}
        rotation={[-Math.PI / 2, 0, 3.06]}
        scale={[0, 0, 0]}
      >
        <group position={[-337.62, -369.78, -444.19]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Mesh_0001.geometry}
            material={nodes.Mesh_0001.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Mesh_1.geometry}
            material={nodes.Mesh_1.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Mesh_2.geometry}
            material={nodes.Mesh_2.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Mesh_3.geometry}
            material={nodes.Mesh_3.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Mesh_4.geometry}
            material={nodes.Mesh_4.material}
          />
        </group>
      </group>
      <group
        position={[-3.52, 3.1, 7.04]}
        rotation={[-Math.PI / 2, 0, -1.73]}
        scale={[0, 0, 0]}
      >
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[8.58, 13.85, 134]} rotation={[0, Math.PI / 2, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.MacBook_1_MacBook1_0.geometry}
              material={materials["MacBook.1"]}
            />
          </group>
        </group>
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Screen.geometry}
        material={nodes.Screen.material}
        position={[0, 5.52, 0.24]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Connector.geometry}
        material={nodes.Connector.material}
        position={[-3.77, 0.99, 0]}
        rotation={[0, 1.24, 0]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001.geometry}
          material={nodes.Cylinder001.material}
          position={[0.04, 1.09, -0.04]}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cylinder002.geometry}
            material={nodes.Cylinder002.material}
            position={[-0.11, -0.05, 0.05]}
            scale={[0.31, 0.51, 0.31]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cylinder003.geometry}
            material={nodes.Cylinder003.material}
            position={[-0.01, -0.05, 0.11]}
            scale={[0.31, 0.51, 0.31]}
          />
        </mesh>
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Connector001.geometry}
        material={nodes.Connector001.material}
        position={[3.79, 0.99, 0]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder006.geometry}
          material={nodes.Cylinder006.material}
          position={[0.04, 1.09, -0.04]}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cylinder004.geometry}
            material={nodes.Cylinder004.material}
            position={[-0.01, -0.05, 0.11]}
            scale={[0.31, 0.51, 0.31]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Cylinder005.geometry}
            material={nodes.Cylinder005.material}
            position={[-0.11, -0.05, 0.05]}
            scale={[0.31, 0.51, 0.31]}
          />
        </mesh>
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={nodes.Cube.material}
        position={[-0.98, 0.75, 7.39]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={nodes.Cube001.material}
        position={[-0.98, 2.19, 7.39]}
        rotation={[0, 0.5, 0]}
        scale={[0.8, 0.69, 1.24]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={nodes.Cube002.material}
        position={[-6.41, 0.47, 6.21]}
        rotation={[0, -0.42, 0]}
        scale={[0.82, 0.47, 1.56]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={nodes.Cube003.material}
        position={[-6.63, 2.6, 6.91]}
        rotation={[0, 0.5, 0]}
        scale={[0.32, 0.28, 0.5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={nodes.Cube004.material}
        position={[-6.57, 1.63, 6.4]}
        rotation={[0, 0.5, 0]}
        scale={[0.8, 0.69, 1.24]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube005.geometry}
        material={nodes.Cube005.material}
        position={[-6.71, 2.6, 5.76]}
        rotation={[-Math.PI, 1.09, -Math.PI]}
        scale={[0.32, 0.28, 0.5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Desk.geometry}
        material={nodes.Desk.material}
        position={[-3.79, 2.93, 6.96]}
        rotation={[0, -0.29, 0]}
        scale={[3.32, -0.05, 1.31]}
      />
    </group>
  );
};

useGLTF.preload(modelPath);

export default HRSiteModel;
