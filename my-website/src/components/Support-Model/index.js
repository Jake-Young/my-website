/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";

import modelPath from "./Support.glb";
import { useGLTF } from "@react-three/drei";

export default function SupportModel(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF(modelPath);
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={nodes.Cube.material}
        position={[0, -8, 0]}
        scale={[60.91, 8, 60.91]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        material={nodes.Cylinder.material}
        position={[0, -1.96, 0]}
        scale={[1.41, 15, 1.41]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={nodes.Cylinder001.material}
        position={[0, -3.99, 0]}
        scale={[2.06, 10, 2.06]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={nodes.Cube001.material}
        position={[0, 13.4, 0]}
        scale={[5.63, 0.43, 5.63]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={nodes.Cube002.material}
        position={[0, 18.79, 0]}
        rotation={[0, -0.94, 0]}
        scale={[6.67, 5, 5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={nodes.Cube003.material}
        position={[-0.56, 28.76, 0.61]}
        rotation={[0, -0.78, 0]}
        scale={[6.67, 5, 5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={nodes.Cube004.material}
        position={[-0.68, 38.73, 0.56]}
        rotation={[0, -1.37, 0]}
        scale={[6.67, 5, 5]}
      />
    </group>
  );
}

useGLTF.preload(modelPath);
